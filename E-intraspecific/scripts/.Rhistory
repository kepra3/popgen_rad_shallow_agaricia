mat <- mat[rep(1:nrow(mat), 1, each = 2), ]
# Replace all duplicates with blank cells
mat[c(seq(2, dim(mat)[1], by = 2)), ] <- ""
mat[c(seq(2, dim(mat)[1] - 1, by = 2)), 1] <- "Pop"
mat <- mat[-nrow(mat),]
# Genepop header
file_date <- format(Sys.time(), "%Y%m%d@%H%M") # date and time
header <- c(paste("Genepop file format", file_date), rep("", ncol(mat) - 1))
loc_names <- c(paste(colnames(moko_gendata1)[3:30], collapse = ","), rep("", ncol(mat) - 1))
popline <- c("Pop", rep("", ncol(mat) - 1))
first_lines <- rbind(header, loc_names, popline)
mat <- rbind(first_lines, mat)
write.table(mat, file = "Dropbox/postdoc/dispersal_papers/dispersal_review/data/refined_data/moko.genepop.txt", quote = FALSE, col.names = FALSE, row.names = FALSE)
View(mat)
# run ibd
ibd("Dropbox/postdoc/dispersal_papers/dispersal_review/data/refined_data/moko.genepop.txt",
outputFile = "Dropbox/postdoc/dispersal_papers/dispersal_review/data/refined_data/results/moko.genepop.results.txt",
settingsFile = "",
dataType = "Diploid",
statistic = "a",
geographicScale = "2D",
CIcoverage = 0.95,
testPoint = 0,
minimalDistance = 1e-3,
maximalDistance = 1e4,
mantelPermutations = 1000,
mantelRankTest = FALSE,
verbose = interactive())
# run ibd
ibd("Dropbox/postdoc/dispersal_papers/dispersal_review/data/refined_data/moko.genepop.txt",
outputFile = "Dropbox/postdoc/dispersal_papers/dispersal_review/data/refined_data/results/moko.genepop.results.txt",
settingsFile = "",
dataType = "Diploid",
statistic = "a",
geographicScale = "2D",
CIcoverage = 0.95,
testPoint = 0,
minimalDistance = 1e-3,
maximalDistance = 1e2,
mantelPermutations = 1000,
mantelRankTest = FALSE,
verbose = interactive())
5e2
0.5e2
1.5e2
ibd("Dropbox/postdoc/dispersal_papers/dispersal_review/data/refined_data/moko.genepop.txt",
outputFile = "Dropbox/postdoc/dispersal_papers/dispersal_review/data/refined_data/results/moko.genepop.results.txt",
settingsFile = "",
dataType = "Diploid",
statistic = "a",
geographicScale = "2D",
CIcoverage = 0.95,
testPoint = 0,
minimalDistance = 1e-3,
maximalDistance = 1.5e2,
mantelPermutations = 1000,
mantelRankTest = FALSE,
verbose = interactive())
View(moko_gendata)
View(mat)
# run ibd
ibd("Dropbox/postdoc/dispersal_papers/dispersal_review/data/refined_data/moko.genepop.txt",
outputFile = "Dropbox/postdoc/dispersal_papers/dispersal_review/data/refined_data/results/moko.genepop.results.txt",
settingsFile = "",
dataType = "Diploid",
statistic = "e",
geographicScale = "2D",
CIcoverage = 0.95,
testPoint = 0,
minimalDistance = 1e-3,
maximalDistance = 1.5e2,
mantelPermutations = 1000,
mantelRankTest = FALSE,
verbose = interactive())
View(first_lines)
View(moko_gendata)
View(moko_gendata)
header <- paste(nrow(moko_gendata), 0, 2, ncol(moko_gendata)-3, 2, 2, sep ="\t")
header
# the names used as column labels
# a generic name for individuals(?), spatial coordinates, name of each locus
third_line <- paste("Ind", "X", "Y", colnames(moko_gendata1)[3:30], sep = ",")
colnames(moko_gendata1)[3:30]
# the names used as column labels
# a generic name for individuals(?), spatial coordinates, name of each locus
third_line <- c("Ind", "X", "Y", paste(colnames(moko_gendata1)[3:30], collapse = ","))
# the names used as column labels
# a generic name for individuals(?), spatial coordinates, name of each locus
third_line <- c(, paste("Ind", "X", "Y", colnames(moko_gendata1)[3:30], collapse = ","))
# the names used as column labels
# a generic name for individuals(?), spatial coordinates, name of each locus
third_line <- paste("Ind", "X", "Y", colnames(moko_gendata1)[3:30], collapse = ","))
# the names used as column labels
# a generic name for individuals(?), spatial coordinates, name of each locus
third_line <- paste("Ind", "X", "Y", colnames(moko_gendata1)[3:30], collapse = ",")
# the names used as column labels
# a generic name for individuals(?), spatial coordinates, name of each locus
third_line <- paste("Ind", "X", "Y", paste(colnames(moko_gendata1)[3:30], collapse = ","), sep = ",")
View(moko_geodata)
View(moko_gendata)
mokogendata[,1]
moko_gendata[,1]
moko_gendata[,30]
View(moko_gendata)
rest_lines <- cbind(moko_gendata[,1], moko_gendata[,30], moko_gendata[,31], moko_gendata[,2:29])
View(rest_lines)
# Convert to Spagedi ####
# genotype matrix (very similar to genepop)
gen_lines <- cbind(moko_gendata[,1], moko_gendata[,30], moko_gendata[,31], moko_gendata[,2:29])
View(gen_lines)
# Convert to Spagedi ####
# genotype matrix (very similar to genepop)
gen_lines <- cbind(moko_gendata[,1], moko_gendata[,30], moko_gendata[,31], moko_gendata[,2:29])
# first line, 6 format numbers separated by a tab
#1. # of indiviudals, 2. # of categories(?), 3. # of spatial coordinates in a cartesian coordinate system (0 to 3),
# or put -2 for latitude & longitude, 4. # of loci, 5. # of digits used to code one allele (1 to 3), 6. ploidy
header <- c(paste(nrow(moko_gendata), 0, 2, ncol(moko_gendata)-3, 2, 2, sep ="\t"), rep("", ncol(gen_lines) - 1))
# second line, number of distance intervals, preceded by a negative sign to choose ideal number based on samples
second_line <- c("-7", rep("", ncol(gen_lines)-1))
# the names used as column labels
# a generic name for individuals(?), spatial coordinates, name of each locus
third_line <- c(paste("Ind", "X", "Y", paste(colnames(moko_gendata1)[3:30], collapse = "\t"),
sep = "\t"), rep("", ncol(gen_lines) - 1))
end_line <- c("END", rep("", ncol(gen_lines) - 1))
spagedi <- rbind(header, second_line, thirdline, gen_lines, end_line)
spagedi <- rbind(header, second_line, third_line, gen_lines, end_line)
View(spagedi)
write.table(spagedi, file = "Dropbox/postdoc/dispersal_papers/dispersal_review/data/refined_data/moko.spagedi.txt", quote = FALSE, col.names = FALSE, row.names = FALSE)
# header
header <- c(paste("// Spagedi file format"), format(Sys.time(), "%Y%m%d@%H%M"), rep("", mcol(gen_lines)- 1))
# header
header <- c(paste("// Spagedi file format"), format(Sys.time(), "%Y%m%d@%H%M"), rep("", ncol(gen_lines)- 1))
# first line, 6 format numbers separated by a tab
#1. # of indiviudals, 2. # of categories(?), 3. # of spatial coordinates in a cartesian coordinate system (0 to 3),
# or put -2 for latitude & longitude, 4. # of loci, 5. # of digits used to code one allele (1 to 3), 6. ploidy
first_line <- c(paste(nrow(moko_gendata), 0, 2, ncol(moko_gendata)-3, 2, 2, sep ="\t"), rep("", ncol(gen_lines) - 1))
# second line, number of distance intervals, preceded by a negative sign to choose ideal number based on samples
second_line <- c("-7", rep("", ncol(gen_lines)-1))
# the names used as column labels
# a generic name for individuals(?), spatial coordinates, name of each locus
third_line <- c(paste("Ind", "X", "Y", paste(colnames(moko_gendata1)[3:30], collapse = "\t"),
sep = "\t"), rep("", ncol(gen_lines) - 1))
end_line <- c("END", rep("", ncol(gen_lines) - 1))
spagedi <- rbind(header, first_line, second_line, third_line, gen_lines, end_line)
# header
header <- c(paste("// Spagedi file format", format(Sys.time(), "%Y%m%d@%H%M"), rep("", ncol(gen_lines)- 1)))
header
# header
header <- c(paste("// Spagedi file format", format(Sys.time(), "%Y%m%d@%H%M")), rep("", ncol(gen_lines)- 1))
header
# header
header <- c(paste("// Spagedi file format", format(Sys.time(), "%Y%m%d@%H%M")), rep("", ncol(gen_lines)- 1))
# first line, 6 format numbers separated by a tab
#1. # of indiviudals, 2. # of categories(?), 3. # of spatial coordinates in a cartesian coordinate system (0 to 3),
# or put -2 for latitude & longitude, 4. # of loci, 5. # of digits used to code one allele (1 to 3), 6. ploidy
first_line <- c(paste(nrow(moko_gendata), 0, 2, ncol(moko_gendata)-3, 2, 2, sep ="\t"), rep("", ncol(gen_lines) - 1))
# second line, number of distance intervals, preceded by a negative sign to choose ideal number based on samples
second_line <- c("-7", rep("", ncol(gen_lines)-1))
# the names used as column labels
# a generic name for individuals(?), spatial coordinates, name of each locus
third_line <- c(paste("Ind", "X", "Y", paste(colnames(moko_gendata1)[3:30], collapse = "\t"),
sep = "\t"), rep("", ncol(gen_lines) - 1))
end_line <- c("END", rep("", ncol(gen_lines) - 1))
spagedi <- rbind(header, first_line, second_line, third_line, gen_lines, end_line)
write.table(spagedi, file = "Dropbox/postdoc/dispersal_papers/dispersal_review/data/refined_data/moko.spagedi.txt", quote = FALSE, col.names = FALSE, row.names = FALSE)
View(spagedi)
View(spagedi)
30-3
View(moko_gendata)
ncol(moko_gendata)
ncol(moko_gendata)-3
3:30
length(3:30)
View(gen_lines)
View(spagedi)
View(spagedi)
# Convert to Spagedi ####
# genotype matrix (very similar to genepop)
gen_lines <- cbind(moko_gendata[,1], moko_gendata[,30], moko_gendata[,31], moko_gendata[,2:29])
# header
header <- c(paste("// Spagedi file format", format(Sys.time(), "%Y%m%d@%H%M")), rep("", ncol(gen_lines)- 1))
# first line, 6 format numbers separated by a tab
#1. # of indiviudals, 2. # of categories(?), 3. # of spatial coordinates in a cartesian coordinate system (0 to 3),
# or put -2 for latitude & longitude, 4. # of loci, 5. # of digits used to code one allele (1 to 3), 6. ploidy
first_line <- c(nrow(moko_gendata), 0, 2, ncol(moko_gendata)-3, 2, 2, rep("", ncol(gen_lines) - 7))
# second line, number of distance intervals, preceded by a negative sign to choose ideal number based on samples
second_line <- c("-7", rep("", ncol(gen_lines)-1))
# the names used as column labels
# a generic name for individuals(?), spatial coordinates, name of each locus
third_line <- c(paste("Ind", "X", "Y", paste(colnames(moko_gendata1)[3:30], collapse = "\t"),
sep = "\t"), rep("", ncol(gen_lines) - 1))
end_line <- c("END", rep("", ncol(gen_lines) - 1))
spagedi <- rbind(header, first_line, second_line, third_line, gen_lines, end_line)
# first line, 6 format numbers separated by a tab
#1. # of indiviudals, 2. # of categories(?), 3. # of spatial coordinates in a cartesian coordinate system (0 to 3),
# or put -2 for latitude & longitude, 4. # of loci, 5. # of digits used to code one allele (1 to 3), 6. ploidy
first_line <- c(nrow(moko_gendata), 0, 2, ncol(moko_gendata)-3, 2, 2, rep("", ncol(gen_lines) - 6))
# the names used as column labels
# a generic name for individuals(?), spatial coordinates, name of each locus
third_line <- c("Ind", "X", "Y", paste(colnames(moko_gendata1)[3:30], collapse = "\t"))
third_line
# the names used as column labels
# a generic name for individuals(?), spatial coordinates, name of each locus
third_line <- c("Ind", "X", "Y", colnames(moko_gendata1)[3:30])
third_line
spagedi <- rbind(header, first_line, second_line, third_line, gen_lines, end_line)
write.table(spagedi, file = "Dropbox/postdoc/dispersal_papers/dispersal_review/data/refined_data/moko.spagedi.txt", quote = FALSE, col.names = FALSE, row.names = FALSE)
View(spagedi)
View(spagedi)
# header
header <- c(paste("// Spagedi file format", format(Sys.time(), "%Y%m%d@%H%M")), rep("", ncol(gen_lines) - 1))
# first line, 6 format numbers separated by a tab
#1. # of indiviudals, 2. # of categories(?), 3. # of spatial coordinates in a cartesian coordinate system (0 to 3),
# or put -2 for latitude & longitude, 4. # of loci, 5. # of digits used to code one allele (1 to 3), 6. ploidy
first_line <- c(nrow(moko_gendata), 0, 2, ncol(moko_gendata)-3, 2, 2, rep("", ncol(gen_lines) - 6))
# second line, number of distance intervals, preceded by a negative sign to choose ideal number based on samples
second_line <- c("7", "150", "300", "450", "600", "750", "900", "1050", rep("", ncol(gen_lines) - 8))
# the names used as column labels
# a generic name for individuals(?), spatial coordinates, name of each locus
third_line <- c("Ind", "X", "Y", colnames(moko_gendata1)[3:30])
end_line <- c("END", rep("", ncol(gen_lines) - 1))
spagedi <- rbind(header, first_line, second_line, third_line, gen_lines, end_line)
write.table(spagedi, file = "Dropbox/postdoc/dispersal_papers/dispersal_review/data/refined_data/moko.spagedi.txt", quote = FALSE, col.names = FALSE, row.names = FALSE)
write.table(spagedi, file = "Dropbox/postdoc/dispersal_papers/dispersal_review/data/refined_data/moko.spagedi.txt", quote = FALSE, col.names = FALSE, row.names = FALSE, sep = "\t")
View(spagedi)
# Packages
library(vegan)
library(tidyverse)
library(ape)
library(tidyr)
library(dplyr)
library(corrplot)
setwd("~/Dropbox/agaricia_project_2019/shalo_ag/gen_project/popgen_rad_shallow_agaricia/E-intraspecific/scripts/")
all <- read.csv("../data/all_annotations_X_DEPTH_parallel_XYZadjusted.txt")
all <- read.csv("../data/all_annotations_X_DEPTH_parallel_XYZ_adjusted.txt")
all <- all %>% separate(Individual, into = c("Sample", "Species", "Site"), remove = FALSE) %>%
unite(Individual, Sample, Species, Site, remove = FALSE) %>%
dplyr::select(Individual, Sample, Site, Loc, Depth, x, y, z)
View(all)
# TAXA ####
## Import datasets
a <- read.delim("../results/AA2/AA2_all.a.txt", header = FALSE)
# TAXA ####
## Import datasets
a <- read.delim("../results/ibd/AA2/AA2_all.a.txt", header = FALSE)
View(a)
taxa.pop <- read.csv("../results/ibd/ac_3b_nc_20_AA2_all_.csv", row.names = 1)
taxa.pop <- read.csv("../data/ac_3b_nc_20_AA2_all_.csv", row.names = 1)
## PCOA of genetic distance ####
row1 <- NA
a <- rbind(row1, a)
Vx <- NA
a <- cbind(a, Vx)
a <- as.matrix(a)
diag(a) <- 0
a.dist <- as.dist(a, upper = FALSE)
pcoa.a <- pcoa(a.dist) # cmdscale(a.dist) same thing
plot(pcoa.a$vectors[,1], pcoa.a$vectors[,2])
gen.dist <- as.data.frame(pcoa.a$vectors[,1])
gen.dist[,2] <- pcoa.a$vectors[,2]
colnames(gen.dist) <- c("PCoA1", "PCoA2")
## xyz dataset ####
taxa.geodist <- all[all$Individual %in% taxa.pop$Individual,]
taxa.geodist <- taxa.geodist[order(taxa.geodist$Individual),]
View(taxa.geodist)
View(gen.dist)
# PCA ####
pca <- prcomp(taxa.geodist[,5:6])
PC1xy <- pca$x[,1]
PC2xy <- pca$x[,2]
plot(PC1xy, PC2xy)
# PCA ####
pca <- prcomp(taxa.geodist[,5:6])
View(taxa.geodist)
taxa.geodist[,5:6]
# PCA ####
pca <- prcomp(taxa.geodist[,6:7])
View(pca)
View(pca)
taxa <- "AA2"
taxa <- "AA2"
all <- read.csv("../data/all_annotations_X_DEPTH_parallel_XYZ_adjusted.txt")
# Packages
library(vegan)
.Primitive("all")
# Packages
library(vegan)
library(tidyverse)
library(ape)
library(tidyr)
library(dplyr)
library(corrplot)
# Arguments
args <- commandArgs(TRUE)
taxa <- "AA2"
all <- read.csv("../data/all_annotations_X_DEPTH_parallel_XYZ_adjusted.txt")
all <- all %>% separate(Individual, into = c("Sample", "Species", "Site"), remove = FALSE) %>%
unite(Individual, Sample, Species, Site, remove = FALSE) %>%
dplyr::select(Individual, Sample, Site, Loc, Depth, x, y, z)
# TAXA ####
## Import datasets
a <- read.delim(paste0("../results/ibd/", taxa, "/", taxa, "_all.a.txt"), header = FALSE)
if (taxa == "AA1" | taxa == "AA2") {
taxa.pop <- read.csv(paste0("../data/", "ac_3b_nc_20_", taxa, "_all_.csv"), row.names = 1)
}
# Packages
library(vegan)
library(tidyverse)
library(ape)
library(tidyr)
library(dplyr)
library(corrplot)
# Arguments
args <- commandArgs(TRUE)
taxa <- "AH1"
all <- read.csv("../data/all_annotations_X_DEPTH_parallel_XYZ_adjusted.txt")
all <- all %>% separate(Individual, into = c("Sample", "Species", "Site"), remove = FALSE) %>%
unite(Individual, Sample, Species, Site, remove = FALSE) %>%
dplyr::select(Individual, Sample, Site, Loc, Depth, x, y, z)
# TAXA ####
## Import datasets
a <- read.delim(paste0("../results/ibd/", taxa, "/", taxa, "_all.a.txt"), header = FALSE)
if (taxa == "AA1" | taxa == "AA2") {
taxa.pop <- read.csv(paste0("../data/", "ac_3b_nc_20_", taxa, "_all_.csv"), row.names = 1)
} else if (taxa == "AH1" | taxa == "AH2" | taxa == "AH3") {
taxa.pop <- read.csv(paste0("../data/", "hu_3b_nc_20_", taxa, "_all_.csv"), row.names = 1)
} else if (taxa == "AL1" | taxa == "AL2") {
taxa.pop <- read.csv(paste0("../data/", "lm_3b_nc_20_", taxa, "_all_.csv"), row.names = 1)
}
## PCOA of genetic distance ####
row1 <- NA
a <- rbind(row1, a)
Vx <- NA
a <- cbind(a, Vx)
a <- as.matrix(a)
diag(a) <- 0
a.dist <- as.dist(a, upper = FALSE)
pcoa.a <- pcoa(a.dist) # cmdscale(a.dist) same thing
plot(pcoa.a$vectors[,1], pcoa.a$vectors[,2])
gen.dist <- as.data.frame(pcoa.a$vectors[,1])
gen.dist[,2] <- pcoa.a$vectors[,2]
colnames(gen.dist) <- c("PCoA1", "PCoA2")
## xyz dataset ####
taxa.geodist <- all[all$Individual %in% taxa.pop$Individual,]
taxa.geodist <- taxa.geodist[order(taxa.geodist$Individual),]
# PCA ####
pca <- prcomp(taxa.geodist[,6:7])
PC1xy <- pca$x[,1]
PC2xy <- pca$x[,2]
plot(PC1xy, PC2xy)
View(taxa.geodist)
dat <- cbind(taxa.geodist$Individual, PC1xy, PC2xy, taxa.geodist[,6:7])
plot(gen.dist$PCoA1, PC1xy)
plot(gen.dist$PCoA2, PC1xy)
plot(gen.dist$PCoA1, PC2xy)
plot(gen.dist$PCoA2, PC2xy)
plot(gen.dist$PCoA1, taxa.geodist$z)
plot(gen.dist$PCoA2, taxa.geodist$z)
# no PCA ####
dat <- cbind(taxa.geodist[,c(1,4:8)], gen.dist)
wp.dat <- dat[dat$Loc == "SQ",]
rda1 <- rda(wp.dat[,c(7,8)] ~ wp.dat$x + wp.dat$y + wp.dat$z)
rda1
RsquareAdj(rda1)
signif.full.c <- anova.cca(rda1)
signif.full.c
signif.terms.c <- anova.cca(rda1, by="terms")
signif.terms.c
step(rda1)
signif.terms.c$Variance[7]/sum(signif.terms.c$Variance)
signif.terms.c$Variance[3]/sum(signif.terms.c$Variance)
# RDAs #####
rda1 <- rda(gen.dist ~ PC1xy * PC2xy * taxa.geodist$z)
rda1
RsquareAdj(rda1)
signif.full.c <- anova.cca(rda1)
signif.full.c
signif.terms.c <- anova.cca(rda1, by="terms")
signif.terms.c
step(rda1)
rda1.1 <- rda(gen.dist ~ PC1xy)
rda1.1
RsquareAdj(rda1.1)
signif.full.c <- anova.cca(rda1.1)
signif.full.c
signif.terms.c <- anova.cca(rda1.1, by="terms")
signif.terms.c
rda1.2 <- rda(gen.dist ~ 1)
rda1.2
RsquareAdj(rda1.2)
signif.full.c <- anova.cca(rda1.2)
signif.full.c
signif.terms.c <- anova.cca(rda1.2, by="terms")
signif.terms.c
# RDAs #####
# Full model
rda1 <- rda(gen.dist ~ PC1xy * PC2xy * taxa.geodist$z)
rda1
RsquareAdj(rda1)
signif.full.c <- anova.cca(rda1)
signif.full.c
signif.terms.c <- anova.cca(rda1, by="terms")
signif.terms.c
step(rda1)
signif.full.c <- anova.cca(rda1)
signif.full.c
signif.terms.c <- anova.cca(rda1, by="terms")
signif.terms.c
View(signif.terms.c)
step(rda1)
# RDAs #####
# Full model
rda1 <- rda(gen.dist ~ PC1xy * PC2xy * taxa.geodist$z)
rda1
RsquareAdj(rda1)
signif.full.c <- anova.cca(rda1)
signif.full.c
signif.terms.c <- anova.cca(rda1, by="terms")
signif.terms.c
step(rda1)
write.csv(signif.full.c, paste0("../results/rda/fullmodeloverall_", taxa, ".csv"), quote = FALSE)
write.csv(signif.terms.c, paste0("../results/rda/fullmodelterms_", taxa, ".csv"), quote = FALSE)
# RDAs #####
# Full model
rda1 <- rda(gen.dist ~ PC1xy * PC2xy * taxa.geodist$z)
rda1
RsquareAdj(rda1)
signif.full.c <- anova.cca(rda1)
signif.full.c
signif.terms.c <- anova.cca(rda1, by="terms")
signif.terms.c
rda2 <- rda(gen.dist ~ PC1xy + PC2xy + taxa.geodist$z + PC2xy:taxa.geodist$z)
rda2
RsquareAdj(rda2)
signif.full.c <- anova.cca(rda2)
signif.full.c
signif.terms.c <- anova.cca(rda2, by="terms")
signif.terms.c
step(rda2)
rda3 <- rda(gen.dist ~ PC1xy + PC2xy)
rda3
RsquareAdj(rda3)
signif.full.c <- anova.cca(rda3)
signif.full.c
signif.terms.c <- anova.cca(rda3, by="terms")
signif.terms.c
step(rda2)
step(rda3)
rda3 <- rda(gen.dist ~ PC1xy + PC2xy)
rda3
RsquareAdj(rda3)
signif.full.c <- anova.cca(rda3)
signif.full.c
signif.terms.c <- anova.cca(rda3, by="terms")
signif.terms.c
step(rda3)
rda3 <- rda(gen.dist ~ PC1xy + PC2xy)
rda3
RsquareAdj(rda3)
signif.full.c <- anova.cca(rda3)
signif.full.c
signif.terms.c <- anova.cca(rda3, by="terms")
signif.terms.c
step(rda3)
rda4 <- rda(gen.dist ~ PC1xy + taxa.geodist$z)
rda4
RsquareAdj(rda4)
signif.full.c <- anova.cca(rda4)
signif.full.c
signif.terms.c <- anova.cca(rda4, by="terms")
signif.terms.c
step(rda4)
step(rda3)
rda2 <- rda(gen.dist ~ PC1xy + PC2xy + taxa.geodist$z + PC2xy:taxa.geodist$z)
rda2
RsquareAdj(rda2)
signif.full.c <- anova.cca(rda2)
signif.full.c
signif.terms.c <- anova.cca(rda2, by="terms")
signif.terms.c
step(rda2)
# PC2xy significant, but PC2xy and Z very similar (the order of the model may be causing this effect)
# Interaction significant within some plots Z or PC2xy significant...
rda3 <- rda(gen.dist ~ PC1xy + PC2xy)
rda3
RsquareAdj(rda3)
signif.full.c <- anova.cca(rda3)
signif.full.c
signif.terms.c <- anova.cca(rda3, by="terms")
signif.terms.c
step(rda3)
rda2
RsquareAdj(rda2)
rda3
RsquareAdj(rda3)
step(rda3)
step(rda2)
rda10 <- rda(gen.dist ~ taxa.geodist$z)
rda10
RsquareAdj(rda10)
signif.full.c <- anova.cca(rda10)
signif.full.c
signif.terms.c <- anova.cca(rda10, by="terms")
signif.terms.c
rda10 <- rda(gen.dist ~ PC2)
rda10 <- rda(gen.dist ~ PC2xy)
rda10
RsquareAdj(rda10)
signif.full.c <- anova.cca(rda10)
signif.full.c
signif.terms.c <- anova.cca(rda10, by="terms")
signif.terms.c
